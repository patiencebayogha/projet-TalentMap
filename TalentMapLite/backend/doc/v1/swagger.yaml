# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: TalentMap Lite API v1
  description: TalentMap Lite API v1
  version: "1.0.0"
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
host: tml.hubi.org
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /users/list:
    get:
      responses:
        200:
          description: Return all users without password and skill identifiers
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  /users/get:
    post:
      parameters:
        - name: email
          in: body
          description: Email of the user
          required: true
          schema:
            $ref: '#/definitions/EmailSchema'
      responses:
        200:
          description: Return the user without password and skill identifiers
          schema:
              $ref: '#/definitions/EmailSchema'
  /users/add-skill:
    post:
      parameters:
        - name: skill
          in: body
          description: New skill
          required: true
          schema:
            $ref: '#/definitions/AddSkillSchema'
      responses:
        200:
          description: Add a skill to the user
          schema:
            $ref: '#/definitions/User'
  /users/update:
    patch:
      parameters:
        - name: skill
          in: body
          description: Skill to update
          required: true
          schema:
            $ref: '#/definitions/AddSkillSchema'
      responses:
        200:
          description: Update the level of a user's skill
          schema:
            $ref: '#/definitions/User'
  /users/update-name:
    patch:
      parameters:
        - name: name
          in: body
          description: Name and surname to update
          required: true
          schema:
            $ref: '#/definitions/UpdateNameSchema'
      responses:
        200:
          description: Update the name and surname of the user
          schema:
            $ref: '#/definitions/User'
  /users/delete-skill:
    post:
      parameters:
        - name: delete
          in: body
          description: Skill to delete and user
          required: true
          schema:
            $ref: '#/definitions/DeleteSkillSchema'
      responses:
        200:
          description: Delete a user's skill
          schema:
            $ref: '#/definitions/User'
  /skills/list:
    get:
      responses:
        200:
          description: Return all skills without identifiers
          schema:
            type: array
            items:
              $ref: '#/definitions/Skill'
  /skills/list:
    post:
      parameters:
        - name: category
          in: body
          description: Category of skills
          schema:
            $ref: '#/definitions/CategorySchema'
      responses:
        200:
          description: Return the skills that belong to the category without identifiers
          schema:
              $ref: '#/definitions/Skill'
  /skills/get:
    post:
      parameters:
        - name: skill
          in: body
          description: Name of the skill
          schema:
            $ref: '#/definitions/SkillSchema'
      responses:
        200:
          description: Return a skill without the identifier
          schema:
              $ref: '#/definitions/Skill'
  /auth/login:
    post:
      parameters:
        - name: auth
          in: body
          description: Email and password of the user
          schema:
            $ref: '#/definitions/AuthSchema'
      responses:
        200:
          description: Log the user
  /auth/islogged:
    get:
      responses:
        200:
          description: Check if a user is logged-in
  /auth/getMe:
    get:
      responses:
        200:
          description: Return the current user
definitions:
  Category:
    properties:
      _id:
        type: number
        description: Unique identifier
      name:
        type: string
        description: Unique identifier representing the name of the category
  Skill:
    properties:
      _id:
        type: number
        description: Unique identifier
      name:
        type: string
        description: Unique identifier representing the name of the skill
  User:
    properties:
      _id:
        type: number
        description: Unique identifier
      email:
        type: string
        description: Unique identifier representing the email of the user
      password:
        type: string
        description: Password of the user (MD5)
      categories:
        type: array
        items:
          type: object
          properties:
            _id:
              type: number
              description: Unique identifier
            category:
              type: string
              description: Unique identifier representing the name of the category
            skills:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: number
                    description: Unique identifier
                  skill:
                    type: string
                    description: Unique identifier representing the name of the skill
      name:
        type: string
        description: Name of the user
      surname:
        type: string
        description: Surname of the user
      photo:
        type: string
        description: Photo of the user
      active:
        type: boolean
        description: Acivation status of the user
  AddSkillSchema:
    properties:
      email:
        type: string
        description: Email of the user
      skill:
        type: string
        description: Name of the skill
      level:
        type: number
        description: Level of the skill
  EmailSchema:
    properties:
      email:
        type: string
        description: Email of the user
  UpdateNameSchema:
    properties:
      email:
        type: string
        description: Email of the user
      name:
        type: string
        description: New name of the user
      surname:
        type: string
        description: New surname of the user
  DeleteSkillSchema:
    properties:
      email:
        type: string
        description: Email of the user
      skill:
        type: string
        description: Skill to delete
  CategorySchema:
    properties:
      category:
        type: string
        description: Category of a skill
  SkillSchema:
    properties:
      skill:
        type: string
        description: Category of a skill
  AuthSchema:
    properties:
      email:
        type: string
        description: Email of the user
      password:
        type: string
        description: Password of the user
