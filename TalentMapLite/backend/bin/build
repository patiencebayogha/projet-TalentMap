#!/usr/bin/env node

/**
 * Created by JBA3353 on 17/02/2015.
 */

var fs = require('fs');
var mkdirp = require("mkdirp");
var getDirName = require("path").dirname
var swaggerParser = require("swagger-parser");

var debug = require('debug')('TalentMapLite:build');


var buildPath="./build/";
var docPath="./doc/";


function writeFile (path, contents, cb) {
    mkdirp(getDirName(path), function (err) {
        if (err) return cb(err);
        fs.writeFile(path, contents, cb);
    });
}


function docClean(docFile) {

    fs.rmdir(docFile) && fs.unlink(docFile, function (err) {
        if(err) {
            debug('error: '+err);
            return;
        }
        debug('successfully clean documentation');
    });
}


function docBuild(src, swagger_doc) {

    swaggerParser.parse(src, {resolve$Refs: false}, function(err, api, metadata) {
        if(err) {
            debug('error: '+err);
            return;
        }
        writeFile(swagger_doc, JSON.stringify(api, null, "    "), function(err) {
            if(err) {
                debug('error: '+err);
            } else {
                debug("Swagger doc generated");
            }
        });
    });
}


debug('Building...');

/* Build all versions of documentation */
fs.readdir(docPath, function(err, files) {

    files.forEach(function(file){
        if(fs.lstatSync(docPath+file).isDirectory()) {
            docClean(buildPath+'/doc/'+file+'/swagger.json');
            docBuild(docPath+file+'/swagger.yaml', buildPath+'/doc/'+file+'/swagger.json');
        }
    });
});


